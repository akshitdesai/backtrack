"""empty message

Revision ID: cb2d18f7cee3
Revises: 
Create Date: 2024-03-20 13:20:24.612784

"""
from datetime import datetime, timedelta
from alembic import op
import sqlalchemy as sa
import uuid
import random

def generate_dummy_data():
    start_date = datetime.now() - timedelta(days=7)
    dummy_data = []

    for i in range(8):
        # Generate 3 to 4 entries per day
        for _ in range(random.randint(3, 4)):
            start_time = start_date.replace(hour=random.randint(0, 23), minute=random.randint(0, 59), second=random.randint(0, 59))
            end_time = start_time + timedelta(minutes=random.randint(30, 120))
            duration = (end_time - start_time).seconds
            good_posture = random.randint(70, 100)
            dummy_data.append({
                'start_time': start_time,
                'end_time': end_time,
                'duration': duration,
                'good_posture': good_posture
            })

        start_date += timedelta(days=1)

    return dummy_data

# Dummy data for last 7 days
dummy_data = generate_dummy_data()


# revision identifiers, used by Alembic.
revision = 'cb2d18f7cee3'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.Column('permissions', sa.Integer(), nullable=True),
    sa.Column('description', sa.String(length=50), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_roles_default'), ['default'], unique=False)

    op.create_table('stream',
    sa.Column('id', sa.String(length=64), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('good_posture', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('username', sa.String(length=15), nullable=True),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('password_hash', sa.String(length=128), nullable=True),
    sa.Column('joined_date', sa.DateTime(), nullable=True),
    sa.Column('role_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)
        batch_op.create_index(batch_op.f('ix_user_username'), ['username'], unique=True)

    # ### end Alembic commands ###
    for data in dummy_data:
        op.execute(
            f"INSERT INTO stream (id, start_time, end_time, duration, good_posture) VALUES ('{str(uuid.uuid4())}', '{data['start_time']}', '{data['end_time']}', {data['duration']}, {data['good_posture']})"
        )

def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_username'))
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('stream')
    with op.batch_alter_table('roles', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_roles_default'))

    op.drop_table('roles')
    # ### end Alembic commands ###
